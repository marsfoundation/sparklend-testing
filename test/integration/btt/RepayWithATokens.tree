pool.repayWithATokens()
├── when amount is zero
   └── it should revert (boundary)
├── given not active
   └── it should revert
├── given paused
   └── it should revert
├── given frozen
   └── it should succeed
├── when there is no debt to be repaid (no variable debt)
   └── it should revert
├── given reserve is NOT in isolation mode
    ├── given no time has passed since borrow
        └── when user is paying greater than debt
            └── it should repay all debt, user is no longer borrowing [01]
        └── when user is paying with max uint
            └── it should repay all debt, user is no longer borrowing [02]
        └── when user is paying equal to the debt
            └── it should repay all debt, user is no longer borrowing [03]
        └── when user is paying with less than debt
            └── it should repay some of the debt, user is still borrowing [04]
    ├── given some time has passed since borrow (same tree as above, updating indexes)
        └── when user is paying greater than debt
            └── it should repay all debt, user is no longer borrowing [05]
        └── when user is paying with max uint
            └── it should repay all debt, user is no longer borrowing [06]
        └── when user is paying equal to the debt
            └── it should repay all debt, user is no longer borrowing [07]
        └── when user is paying with less than debt
            └── it should repay some of the debt, user is still borrowing [08]
├── given reserve is in isolation mode (same tree as above, updating isolation debt)
    ├── given no time has passed since borrow
        └── when user is paying greater than debt
            └── it should repay all debt, user is no longer borrowing [09]
        └── when user is paying with max uint
            └── it should repay all debt, user is no longer borrowing [10]
        └── when user is paying equal to the debt
            └── it should repay all debt, user is no longer borrowing [11]
        └── when user is paying with less than debt
            └── it should repay some of the debt, user is still borrowing [12]
    ├── given some time has passed since borrow (same tree as above, updating indexes)
        └── when user is paying greater than debt
            └── it should repay all debt, user is no longer borrowing [13]
        └── when user is paying with max uint
            └── it should repay all debt, user is no longer borrowing [14]
        └── when user is paying equal to the debt
            └── it should repay all debt, user is no longer borrowing [15]
        └── when user is paying with less than debt
            └── it should repay some of the debt, user is still borrowing [16]
