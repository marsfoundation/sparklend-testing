pool.withdraw()
├── when amount is zero
   └── it should revert (boundary)
├── when amount greater than balance
   └── it should revert (boundary)
├── given not active
   └── it should revert
├── given paused
   └── it should revert
├── when resulting health factor is below liquidation threshold
   └── it should revert (boundary)
├── when resulting LTV of collateral is not zero but the LTV of the reserve config is zero
   └── it should revert
├── when there is not enough liquidity
   └── it should revert (boundary)
└── given no time has passed
    └── given there is no active borrow
        └── it should succeed and update no reserve state [01]
    └── given there is an active borrow
        └── given no time has passed after borrow
            └── it should succeed and update rates only [02]
        └── given some time has passed after borrow
            └── it should succeed and update the lastUpdated timestamp, indexes, and rates [03]
└── given time has passed
    └── given there is no active borrow
        └── it should succeed and update lastUpdated timestamp [04]
    └── given there is an active borrow
        └── given no time has passed after borrow
            └── it should succeed and update rates only [05]
        └── given some time has passed after borrow
            └── it should succeed and update the lastUpdated timestamp, indexes, and rates [06]
├── when the user has active collateral
    ├── when the user passes in uint256 max and has active collateral
        └── it should withdraw the maximum balance that the user has and deactivates collateral [07]
    ├── when the user passes in the full balance and has active collateral
        └── it should withdraw the maximum balance that the user has and deactivates collateral [08]
    └── when the user passes less than the full balance
        └── it should withdraw the amount and keep collateral activated [09]
